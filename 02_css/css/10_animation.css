body {
  height: 2000px;
}

.container {
  width: 500px;
  height: 500px;
  border: 3px solid black;
  padding: 10px;
}

.box {
  width: 100px;
  height: 100px;
  background-color: red;
  animation-name: scaleup, fadein; /*실행하고자 하는 애니메이션 이름 지정*/
  animation-duration: 1s, 1s; /*지속시간*/
  animation-delay: 0s, 0s; /*지연시간*/
  animation-timing-function: linear, ease; /*값 변화의 폭*/
  animation-iteration-count: 2; /*반복 획수. infinite(무한) 혹은 숫자*/
  animation-direction: alternate-reverse;
  /*애니메이션의 방향. reverse(시작점이 반대로, alternate(애니메이션이 끝난 후 반대 방향으로 진행)*/
  animation-fill-mode: both;
  animation-play-state: running; /*재생 상태를 제어한다. running(기본값, 재생), paused(정지)*/
  /*
  forwards(끝난 후 애니메이션 끝 프레임의 상태를 유지한다.)
  backwards(딜레이가 있을 때 애니메이션 시작 프레임을 적용한다.)
  both (시작프레임, 끝프레임 모두 유지한다.)
  */

  animation: scaleup 1s 1s ease normal both,
    fadein 2 1s 1s linear infinite alternate;
}
/* 
    애니메이션 정의 
    구간마다의 상태값을 설정
    from ~ to : from(시작점)_to(끝점). 원래 상태에서 시작하면 from 생략 가능
    % : 0~100% 세부조정 가느야
    */
@keyframes scaleup {
  50% {
    width: 200px;
  }

  75% {
    width: 150px;
    background-color: black;
  }
  100% {
    width: 200px;
  }
}

/* opacity(투명도) 0(투명한 상태)~1(불투명) 을 통해서 fadein(서서히 나타나는 효과) */

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.btn {
  width: 50px;
  height: 50px;
  border: 3px solid black;
  border-radius: 50%;

  position: fixed;
  bottom: 50px;
  right: 50px;

  animation: fade 1s, sildeup 1s;
}

@keyframes fade {
  from {
    opacity: 0;
  }
}

@keyframes sildeup {
  from {
    transform: translateY(20px);
  }
}

/*오른쪽 하단에 동그라미버튼 스크롤되어도 고정되게, 밑에서 서서히 나타나는 효과 1회*/
