body {
  height: 2000px;
}

.container {
  width: 500px;
  height: 500px;
  border: 3px solid black;
  padding: 10px;
}

.box {
  width: 100px;
  height: 100px;
  background-color: red;
  opacity: 0;
  animation-name: scaleUp, fadeIn; /* 실행하고자 하는 애니메이션 이름 지정. */
  animation-duration: 1s, 1s; /* 지속시간 */
  animation-delay: 1s, 1s; /* 지연시간 */
  animation-timing-function: linear, ease; /* 값 변화의 폭 */
  animation-iteration-count: 1; /* 반복 횟수. infinite(무한) 혹은 숫자. */
  animation-direction: normal; /* 애니메이션의 방향. reverse(시작점이 반대로), alternate(애니메이션이 끝난 후 반대 방향으로 진행) */

  animation-fill-mode: both;
  /* 
    forwards(끝난 후 애니메이션 끝프레임의 상태를 유지한다.)
    backwards(딜레이가 있을 때 애니메이션 시작 프레임을 적용한다.) 
    both (시작프레임, 끝프레임 모두 유지한다.)
  */

  animation: scaleUp 1s 1s ease 1 normal both, fadeIn 2 1s 1s linear forwards;
}

/* 
    애니메이션 정의 
    구간마다의 상태값을 상태값 설정.
    from ~ to : from(시작점) ~ to(끝점). 원래 상태에서 시작하면 from 생략 가능.
    % : 0~100% 세부조정 가능.
*/
@keyframes scaleUp {
  /* 50% {
    width: 200px;
  }

  75% {
    width: 150px;
    background-color: black;
  } */

  100% {
    width: 200px;
  }
}

/* opacity( 0 : 투명 ~ 1 : 불투명 )를 통해서 fadeIn(서서히 나타나는 효과) */
@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

.btn {
  width: 50px;
  height: 50px;
  border: 3px solid black;
  border-radius: 50%;

  position: fixed;
  bottom: 50px;
  right: 50px;
  animation: fade 1s, slideUp 1s;
}

@keyframes fade {
  from {
    opacity: 0;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
  }
}
